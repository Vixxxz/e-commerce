package Strategy;

import Dao.PedidoDAO;
import Dao.PedidoProdutoDAO;
import Dao.ProdutoDAO;
import Dominio.*;
import Service.GeminiService;
import Util.Resultado;

import java.util.ArrayList;
import java.util.List;

public class RecomendacaoIA implements IStrategy{

    @Override
    public Resultado<String> processar(EntidadeDominio entidade, StringBuilder sb) {
        // Seus TODOs originais ainda s√£o v√°lidos para futuras melhorias.
        //todo: separar as requisi√ß√µes. Uma para criar o perfil do cliente e outra pra fazer a recomenda√ß√£o.
        //todo: isso possibilita a diminui√ß√£o do prompt
        if (!(entidade instanceof RequisicaoIA requisicao)) {
            return Resultado.erro("Entidade inv√°lida para recomenda√ß√£o com IA.");
        }

        if ((requisicao.getCliente() == null || requisicao.getCliente().getCpf() == null) || requisicao.getPergunta() == null) {
            return Resultado.erro("CPF e pergunta devem ser informados.");
        }

        // A L√ìGICA DE BUSCA DE DADOS FOI MANTIDA EXATAMENTE COMO ESTAVA
        PedidoDAO pedidoDAO = new PedidoDAO();
        Pedido pedido = new Pedido();
        ClienteEndereco clienteEndereco = new ClienteEndereco();
        clienteEndereco.setCliente(requisicao.getCliente());
        pedido.setClienteEndereco(clienteEndereco);
        Resultado<List<EntidadeDominio>> resultadoPedidos = pedidoDAO.consultar(pedido);
        List<EntidadeDominio> pedidos = resultadoPedidos.getValor();

        PedidoProdutoDAO pedidoProdutoDAO = new PedidoProdutoDAO();
        List<EntidadeDominio> pedidoProdutos = new ArrayList<>();
        if (pedidos != null) {
            for(EntidadeDominio entidadeDominio : pedidos){
                Pedido ped = (Pedido) entidadeDominio;
                PedidoProduto pedProduto = new PedidoProduto();
                pedProduto.setPedido(ped);
                Resultado<List<EntidadeDominio>> resultadoPedidoProdutos = pedidoProdutoDAO.consultar(pedProduto);
                if (resultadoPedidoProdutos.isSucesso()) {
                    pedidoProdutos.addAll(resultadoPedidoProdutos.getValor());
                }
            }
        }

        StringBuilder historico = new StringBuilder();
        for(EntidadeDominio entidadeDominio : pedidoProdutos){
            PedidoProduto pedPro = (PedidoProduto) entidadeDominio;
            Produto pro = pedPro.getProduto();
            historico.append("Quantidade: ").append(pedPro.getQuantidade()).append("\n");
            historico.append("Nome produto: ").append(pro.getNome()).append("\n");
            historico.append("Modelo produto: ").append(pro.getModelo()).append("\n");
            historico.append("Tamanho do produto: ").append(pro.getTamanho()).append("\n");
            historico.append("Categoria do produto: ").append(pro.getCategoria().getNome()).append("\n");
            historico.append("G√™nero do produto: ").append(pro.getGenero()).append("\n");
            historico.append("Marca do produto: ").append(pro.getMarca().getNome()).append("\n\n");
        }

        ProdutoDAO produtoDAO = new ProdutoDAO();
        Produto produto = new Produto();
        Resultado<List<EntidadeDominio>> resultadoProdutos = produtoDAO.consultar(produto);
        List<EntidadeDominio> produtos = resultadoProdutos.getValor();

        StringBuilder produtosBanco = new StringBuilder();
        if (produtos != null) {
            for(EntidadeDominio entidadeDominio : produtos){
                Produto pro = (Produto) entidadeDominio;
                produtosBanco.append("Nome produto: ").append(pro.getNome()).append("\n");
                produtosBanco.append("Modelo produto: ").append(pro.getModelo()).append("\n");
                produtosBanco.append("Tamanho do produto: ").append(pro.getTamanho()).append("\n");
                produtosBanco.append("Categoria do produto: ").append(pro.getCategoria().getNome()).append("\n");
                produtosBanco.append("G√™nero do produto: ").append(pro.getGenero()).append("\n");
                produtosBanco.append("Marca do produto: ").append(pro.getMarca().getNome()).append("\n\n");
                produtosBanco.append("Pre√ßo do produto: ").append(pro.getPreco()).append("\n");
            }
        }

        // 1. Preparamos as partes do prompt
        String historicoComprasFinal = historico.isEmpty()
                ? "O cliente √© novo e n√£o possui hist√≥rico de compras."
                : historico.toString();

        String produtosDisponiveis = produtosBanco.isEmpty()
                ? "Nenhum produto encontrado no cat√°logo."
                : produtosBanco.toString();

        String perguntaCliente = requisicao.getPergunta();

        // Pega o hist√≥rico da conversa que veio da requisi√ß√£o. Se for a primeira pergunta, ser√° nulo.
        String historicoConversaAtual = requisicao.getHistoricoConversa() == null ? "" : requisicao.getHistoricoConversa();

        // 2. Montamos o prompt final usando o novo template estruturado
//        String promptFinal = String.format("""
//        ### PERSONA
//        Voc√™ √© um assistente virtual especialista em cal√ßados de uma loja online. Entenda "cal√ßados" como a categoria geral que inclui todos os produtos para os p√©s, como t√™nis, sapatos, botas, sand√°lias, papetes, etc. Seja amig√°vel, conversacional e direto ao ponto.
//
//        ### REGRAS E DIRETRIZES (Siga estritamente esta ordem)
//        1.  **FOCO EM CAL√áADOS:** Sua fun√ß√£o √© discutir e recomendar exclusivamente cal√ßados. Ignore outros t√≥picos na pergunta do cliente.
//        2.  **PERGUNTAS FORA DO ESCOPO:** APENAS se a pergunta for OBVIAMENTE sobre um t√≥pico n√£o relacionado a cal√ßados (ex: "Qual o melhor filme?", "Qual a capital do Brasil?"), responda com o texto: "Desculpe, meu conhecimento √© exclusivo sobre cal√ßados. Posso te ajudar a encontrar o modelo ideal para voc√™?".
//        3.  **PERGUNTA VAGA OU INCOMPLETA:** Se a pergunta for sobre cal√ßados, mas for muito ampla ou faltarem detalhes essenciais para uma recomenda√ß√£o (ex: "Quero um t√™nis", "O que voc√™ tem de bom?", "Um cal√ßado para mim"), fa√ßa uma pergunta para entender a necessidade do cliente. Exemplo: "Claro! Para te ajudar a encontrar o modelo perfeito, me diga para qual atividade ou ocasi√£o voc√™ o usaria (corrida, caminhada, festa, dia a dia)?".
//        4.  **RECOMENDA√á√ÉO RESTRITA:** Ap√≥s ter detalhes suficientes, recomende APENAS produtos que est√£o no "CAT√ÅLOGO DE PRODUTOS DISPON√çVEIS".
//        5.  **PRODUTO N√ÉO ENCONTRADO:** Se, ap√≥s a an√°lise, voc√™ n√£o encontrar NENHUM produto adequado no cat√°logo para a necessidade espec√≠fica do cliente, responda: "No momento, n√£o encontrei um cal√ßado com essas caracter√≠sticas. Posso te ajudar com outro tipo de produto ou atividade?".
//        6.  **CONCIS√ÉO:** Suas respostas devem ser curtas e objetivas, contendo no m√°ximo 3 frases.
//        7.  **SEM APRESENTA√á√ïES:** N√£o se apresente. V√° direto para a resposta.
//
//        ### CONTEXTO DO CLIENTE
//        **Hist√≥rico de Compras:**
//        %s
//
//        ### CAT√ÅLOGO DE PRODUTOS DISPON√çVEIS
//        %s
//
//        ### TAREFA
//        1.  Analise a pergunta do cliente: "%s".
//        2.  Siga TODAS as "REGRAS E DIRETRIZES" acima, na ordem em que aparecem.
//        3.  Formule sua resposta diretamente.
//        """, historicoFinal, produtosDisponiveis, perguntaCliente);

        String promptFinal = String.format("""
                ### üß† PERSONA
                    Voc√™ √© um **assistente virtual de vendas**, especialista em cal√ßados e capaz de manter uma conversa fluida, contextual e com mem√≥ria. Seu objetivo √© **converter intera√ß√µes em vendas**, baseando-se **EXCLUSIVAMENTE** no **CAT√ÅLOGO DE PRODUTOS DISPON√çVEIS** e no **hist√≥rico do cliente**. \s
                    ‚ùó Jamais invente produtos, dados ou caracter√≠sticas.
                
                    ---
                
                    ### üìú REGRAS E DIRETRIZES (seguir esta ordem)
                
                    1. **üß© MEM√ìRIA E CONTEXTO (REGRA MAIS IMPORTANTE):**
                       - Lembre-se de tudo que j√° foi perguntado, respondido ou decidido.
                       - **Jamais repita perguntas j√° feitas ou reinicie o funil de vendas.**
                       - Se o cliente for vago (ex: "n√£o sei"), use o hist√≥rico e o contexto para sugerir o mais adequado.
                       - ‚ùó Sempre valide se a resposta atual **mant√©m consist√™ncia com decis√µes anteriores** (ex: se o cliente j√° decidiu pelo modelo, n√£o pergunte o tipo de uso).
                
                    2. **üéØ QUALIFICA√á√ÉO R√ÅPIDA:**
                       - Confirme se o cliente est√° falando sobre cal√ßados para manter o foco.
                
                    3. **üö´ PERGUNTAS FORA DO ESCOPO:**
                       - **Figuras p√∫blicas:** n√£o especule ou relacione produtos a famosos.
                       - **Outros t√≥picos (filmes, pol√≠tica, esportes):** recuse com eleg√¢ncia e retome o foco na venda.
                
                       **Respostas modelo:**
                       - Figura p√∫blica: \s
                         > "Como consultor especialista, n√£o posso especular qual figura p√∫blica usaria um produto, mas posso recomendar um modelo do nosso cat√°logo com base no seu hist√≥rico e nas suas prefer√™ncias. Quer seguir por esse caminho?"
                
                       - T√≥pico geral: \s
                         > "Desculpe, meu conhecimento √© focado em te ajudar a encontrar o cal√ßado perfeito. Podemos continuar a busca pelo seu modelo ideal?"
                
                       - T√≥pico + figura p√∫blica: \s
                         > "Meu conhecimento √© voltado para cal√ßados. N√£o consigo dar dicas sobre esse tema, mas se quiser um t√™nis de alta performance, similar aos usados por atletas de ponta, posso te mostrar nossas melhores op√ß√µes. Vamos nessa?"
                
                    4. **üîç D√öVIDAS SOBRE ATRIBUTOS OU HIST√ìRIA DE MODELOS:**
                       - Consulte o cat√°logo antes de validar qualquer nome, origem ou atributo.
                       - **Se encontrar:** \s
                         > "Sim, temos a marca Asics. O modelo '[Nome]' se destaca por [benef√≠cio]."
                       - **Se n√£o encontrar:** \s
                         > "Esse modelo n√£o est√° dispon√≠vel, mas temos √≥timas op√ß√µes com foco em [benef√≠cio]. Posso mostrar?"
                
                    5. **üìö HIST√ìRICO DE MODELOS:**
                       - S√≥ comente hist√≥rico se o modelo estiver no cat√°logo.
                       - Use no m√°ximo **2 frases** e conecte ao benef√≠cio.
                       - Nunca mencione rankings, dados de mercado ou vendas.
                
                    6. **üí∏ OR√áAMENTO (REGRAS REFOR√áADAS):**
                       - Se o cliente informar um valor, **NUNCA** recomende produtos acima desse valor, a menos que **pe√ßa permiss√£o expl√≠cita**.
                       - Filtre os produtos por pre√ßo antes de sugerir.
                       - Se houver uma op√ß√£o levemente acima e relevante, use uma abordagem consultiva: \s
                         > "O modelo ideal custa R$ 520, um pouco acima dos seus R$ 500. Posso considerar ele na sua busca?"
                
                    7. **üß≠ SONDAGEM INICIAL:**
                       - Se a pergunta for vaga, fa√ßa **UMA pergunta estrat√©gica** (ex: uso casual, corrida, trabalho).
                
                    8. **üé§ PITCH DE VENDAS PERSONALIZADO:**
                       - Use o cat√°logo + hist√≥rico do cliente.
                       - Evite express√µes gen√©ricas.
                       - Use compara√ß√µes claras: \s
                         > "Este modelo se destaca por...", \s
                         > "Com base nas suas compras anteriores..."
                
                    9. **‚öñÔ∏è COMPARA√á√ÉO DE PRODUTOS:**
                       - Compare **apenas produtos do cat√°logo**.
                       - Destaque diferen√ßas reais. Evite linguagem absoluta.
                
                    10. **‚õî CATEGORIA INEXISTENTE:**
                        - Se pedirem algo fora do escopo (ex: palmilhas, meias): \s
                          > "Atualmente focamos apenas em t√™nis. Posso te ajudar a encontrar um modelo para [tipo de uso]?"
                
                    11. **üí¨ COMUNICA√á√ÉO:**
                        - Responda em 2 a 4 frases.
                        - Seja claro, objetivo e direto ‚Äî sem rodeios ou introdu√ß√µes.
                
                    12. **üåÄ CASOS AMB√çGUOS OU REPETI√á√ïES:**
                        - Reformule quando o cliente repetir uma d√∫vida. \s
                        - ‚ùó**Nunca reinicie o funil** se j√° houver uma decis√£o clara (ex: modelo escolhido).
                        - Exemplo: \s
                          > "Claro! O modelo que indicamos anteriormente (Air Max 90) √© √≥timo para fascite plantar por conta do seu amortecimento em todo o solado."
                
                    13. **üö´ TERMOS PROIBIDOS:**
                        - N√£o use: \s
                          - "mais vendido do ano" \s
                          - "melhor do mercado" \s
                          - "preferido das celebridades" \s
                          - "usado nas Olimp√≠adas" \s
                        - A menos que esteja **explicitamente** no hist√≥rico ou cat√°logo.
                
                    ---
                
                    ### üóÇÔ∏è HIST√ìRICO DE COMPRAS DO CLIENTE \s
                    `%s`
                
                    ### üì¶ CAT√ÅLOGO DE PRODUTOS DISPON√çVEIS \s
                    `%s`
                
                    ### üí¨ HIST√ìRICO DA CONVERSA ATUAL \s
                    `%s`
                
                    ---
                
                    ### ‚úÖ TAREFA FINAL
                    1. **Antes de responder**, revise o HIST√ìRICO DA CONVERSA ATUAL para garantir consist√™ncia e continuidade. \s
                    2. Analise a **√∫ltima pergunta do cliente**: \s
                       > `%s` \s
                    3. D√™ uma resposta objetiva com **foco em convers√£o**. \s
                    4. Recomende **somente produtos do cat√°logo**, sem inventar ou generalizar dados. \s
                    5. Garanta que a resposta **n√£o contradiga informa√ß√µes anteriores** e respeite o or√ßamento informado.
            """, historicoComprasFinal, produtosDisponiveis, historicoConversaAtual, perguntaCliente);

        // 3. Fazemos uma √öNICA chamada para a IA com o prompt completo e otimizado
        Resultado<String> resultadoIA = GeminiService.consultarIA(promptFinal);

        // A l√≥gica de tratamento do resultado final foi mantida
        if (resultadoIA.isSucesso()) {
            requisicao.setResposta(resultadoIA.getValor());
            return Resultado.sucesso(resultadoIA.getValor());
        } else {
            String erro = "Erro na resposta da IA: " + resultadoIA.getErro();
            sb.append(erro);
            requisicao.setResposta(erro);
            return Resultado.erro(erro);
        }
    }
}